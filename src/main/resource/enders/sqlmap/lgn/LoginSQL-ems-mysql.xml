<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.co.enders.ums.lgn.dao.LoginMapper">

	<select id="isValidUser" parameterType="loginVO" resultType="userVO">
		<!--
		SELECT A.USER_ID
			 , A.DEPT_NO
			 , (SELECT DEPT_NM FROM NEO_DEPT WHERE DEPT_NO = A.DEPT_NO) DEPT_NM
			 , A.USER_NM
			 , A.TZ_CD
			 , A.UILANG
			 , A.STATUS
			 , B.TZ_TERM
			 , C.CD_NM CHARSET_NM
			 , (SELECT FONT FROM NEO_FONT WHERE CHARSET = A.CHARSET) FONT
			 , (SELECT ORG_CD FROM NEO_USERORG_MAPP WHERE USER_ID = A.USER_ID) ORG_CD 
		  FROM	NEO_USER A, NEO_TIMEZONE B, NEO_CD C
		 WHERE A.TZ_CD    = B.TZ_CD
		   AND A.USER_ID  = #{pUserId}
		   AND A.USER_PWD = #{pUserPwd}
		   AND A.CHARSET  = C.CD
		   AND C.CD_GRP   = 'C022'
		   AND A.UILANG   = C.UILANG
		-->
		SELECT USER_ID
			 , DEPT_NO
			 , DEPT_NM
			 , USER_NM
			 , TZ_CD
			 , UILANG
			 , STATUS
			 , TZ_TERM
			 , CHARSET_NM
			 , FONT
			 , ORG_CD
			 , ORG_KOR_NM
			 , JOB_GB
			 , MAIL_FROM_NM
			 , MAIL_FROM_EM
			 , USER_TEL
			 , USER_EM
			 , REPLY_TO_EM
			 , RETURN_EM
			 , CHARSET
			 , JOB_NM
			 , IF(DEPT_USE_SYS = 0, USER_USE_SYS , DEPT_USE_SYS ) USE_SYS
			 , LINK_SERVICE
			 , PER_PAGE
			 , PWRESETDUE_DT
			 , PWERROR_CNT
			 , CERTILOCK_GB
			 , PW_INIT_YN
			 , LSTACCESS_DT
			 , PWINITLIMT_DT
			 , LSTACCESS_IP
		  FROM (
				SELECT A.USER_ID
					 , A.DEPT_NO
					 , (SELECT DEPT_NM FROM NEO_DEPT WHERE DEPT_NO = A.DEPT_NO) DEPT_NM
					 , A.USER_NM
					 , A.TZ_CD
					 , A.UILANG
					 , A.STATUS
					 , B.TZ_TERM
					 , C.CD_NM CHARSET_NM
					 , (SELECT FONT FROM NEO_FONT WHERE CHARSET = A.CHARSET) FONT
					 , D.ORG_CD
					 , E.ORG_KOR_NM
					 , D.JOB_GB
					 , A.MAIL_FROM_NM
					 , A.MAIL_FROM_EM
					 , A.USER_TEL
					 , A.USER_EM
					 , A.REPLY_TO_EM
					 , A.RETURN_EM
					 , C.CD CHARSET
					 , (SELECT CD_NM FROM NEO_CD WHERE UILANG = A.UILANG AND CD_GRP = 'C105' AND CD = D.JOB_GB) JOB_NM
					 , ( SELECT COUNT(1) FROM NEO_USER_PROG WHERE PROG_ID ='99' AND USER_ID = A.USER_ID ) USER_USE_SYS
					 , ( SELECT COUNT(1) FROM NEO_DEPT_PROG WHERE PROG_ID ='99' AND DEPT_NO = A.DEPT_NO ) DEPT_USE_SYS
					 , IFNULL(( SELECT PROG_ID FROM NEO_USER_PROG WHERE LINK_YN ='Y' AND USER_ID =A.USER_ID ),0 ) LINK_SERVICE
					 , PER_PAGE
					 , A.PWRESETDUE_DT
					 , A.PWERROR_CNT
					 , A.CERTILOCK_GB
					 , A.PW_INIT_YN
					 , A.LSTACCESS_DT
					 , A.PWINITLIMT_DT
					 , A.LSTACCESS_IP
				  FROM	NEO_USER A
				 INNER JOIN NEO_TIMEZONE B
					ON A.TZ_CD    = B.TZ_CD
				 INNER JOIN NEO_CD C
					ON A.CHARSET  = C.CD
				   AND A.UILANG   = C.UILANG
				   AND C.CD_GRP   = 'C022'
				  LEFT OUTER JOIN NEO_USERORG_MAPP D
					ON A.USER_ID  = D.USER_ID
				  LEFT OUTER JOIN V_NEO_ORGANIZATION E
					ON D.ORG_CD   = E.ORG_CD
				 WHERE A.USER_ID  = #{pUserId}
				   AND A.USER_PWD = #{pUserPwd}
		  ) TT1
	</select>
	
	<select id="isSSOUser" parameterType="loginVO" resultType="userVO">
		SELECT USER_ID
			 , DEPT_NO
			 , DEPT_NM
			 , USER_NM
			 , TZ_CD
			 , UILANG
			 , STATUS
			 , TZ_TERM
			 , CHARSET_NM
			 , FONT
			 , ORG_CD
			 , ORG_KOR_NM
			 , JOB_GB
			 , MAIL_FROM_NM
			 , MAIL_FROM_EM
			 , USER_TEL
			 , USER_EM
			 , REPLY_TO_EM
			 , RETURN_EM
			 , CHARSET
			 , JOB_NM
			 , IF(DEPT_USE_SYS = 0, USER_USE_SYS , DEPT_USE_SYS ) USE_SYS
			 , LINK_SERVICE
			 , PER_PAGE
		  FROM (
				SELECT A.USER_ID
					 , A.DEPT_NO
					 , (SELECT DEPT_NM FROM NEO_DEPT WHERE DEPT_NO = A.DEPT_NO) DEPT_NM
					 , A.USER_NM
					 , A.TZ_CD
					 , A.UILANG
					 , A.STATUS
					 , B.TZ_TERM
					 , C.CD_NM CHARSET_NM
					 , (SELECT FONT FROM NEO_FONT WHERE CHARSET = A.CHARSET) FONT
					 , D.ORG_CD
					 , E.ORG_KOR_NM
					 , D.JOB_GB
					 , A.MAIL_FROM_NM
					 , A.MAIL_FROM_EM
					 , A.USER_TEL
					 , A.USER_EM
					 , A.REPLY_TO_EM
					 , A.RETURN_EM
					 , C.CD CHARSET
					 , (SELECT CD_NM FROM NEO_CD WHERE UILANG = A.UILANG AND CD_GRP = 'C105' AND CD = D.JOB_GB) JOB_NM
					 , ( SELECT COUNT(1) FROM NEO_USER_PROG WHERE PROG_ID ='99' AND USER_ID = A.USER_ID ) USER_USE_SYS
					 , ( SELECT COUNT(1) FROM NEO_DEPT_PROG WHERE PROG_ID ='99' AND DEPT_NO = A.DEPT_NO ) DEPT_USE_SYS
					 , IFNULL(( SELECT PROG_ID FROM NEO_USER_PROG WHERE LINK_YN ='Y' AND USER_ID =A.USER_ID ),0 ) LINK_SERVICE
					 , PER_PAGE
				  FROM	NEO_USER A
				 INNER JOIN NEO_TIMEZONE B
					ON A.TZ_CD    = B.TZ_CD
				 INNER JOIN NEO_CD C
					ON A.CHARSET  = C.CD
				   AND A.UILANG   = C.UILANG
				   AND C.CD_GRP   = 'C022'
				  LEFT OUTER JOIN NEO_USERORG_MAPP D
					ON A.USER_ID  = D.USER_ID
				  LEFT OUTER JOIN V_NEO_ORGANIZATION E
					ON D.ORG_CD   = E.ORG_CD
				 WHERE A.USER_ID  = #{pUserId} 
		  ) TT1
	</select>	
	
	<select id="getUserProgList" parameterType="string" resultType="userProgVO">
		SELECT A.PROG_ID
			 , A.PROG_NM
			 , A.PROG_TARGET
			 , A.PROG_DOMAIN
			 , A.PROG_SCRIPT
		  FROM NEO_PROG A
			  ,	NEO_USER_PROG B
		 WHERE A.PROG_ID = B.PROG_ID
		   AND B.USER_ID = #{userId}
		   AND A.USE_YN = 'Y'
		UNION
		SELECT A.PROG_ID
			 , A.PROG_NM
			 , A.PROG_TARGET
			 , A.PROG_DOMAIN
			 , A.PROG_SCRIPT
		  FROM NEO_PROG A
			 , NEO_USER_AUTH_GRP B
			 , NEO_AUTH_GRP_PROG C
			 , NEO_AUTH_GRP D
		 WHERE A.PROG_ID = C.PROG_ID
		   AND B.AUTH_GRP_ID = C.AUTH_GRP_ID
		   AND B.AUTH_GRP_ID = D.AUTH_GRP_ID
		   AND A.USE_YN = 'Y'
		   AND D.USE_YN = 'Y'
		   AND B.USER_ID = #{userId}
		 ORDER BY PROG_NM ASC
	</select>
	
	<select id="getUserMenuList" parameterType="userVO" resultType="sysMenuVO">
		SELECT MENU_ID
			 , MENU_NM
			 , PARENTMENU_ID
			 , SOURCE_PATH
			 , SORT_SNO
			 , MENULVL_VAL
			 , SERVICE_GB
		  FROM
				(
				SELECT MENU_ID
					 , MENU_NM
					 , PARENTMENU_ID
					 , SOURCE_PATH
					 , SORT_SNO
					 , MENULVL_VAL
					 , SERVICE_GB
				  FROM NEO_SYSMENU
				 WHERE MENULVL_VAL = 1
				   AND MENU_ID IN (
									SELECT A.PARENTMENU_ID
									  FROM NEO_SYSMENU A, NEO_MENUUSER_MAPP B
									 WHERE A.MENU_ID = B.MENU_ID
									   AND B.USER_ID = #{userId}
									   AND A.USE_YN = 'Y'
									)
				   AND USE_YN = 'Y'
				 UNION ALL
				SELECT A.MENU_ID
					 , A.MENU_NM
					 , A.PARENTMENU_ID
					 , A.SOURCE_PATH
					 , A.SORT_SNO
					 , A.MENULVL_VAL
					 , A.SERVICE_GB
				  FROM NEO_SYSMENU A, NEO_MENUUSER_MAPP B
				 WHERE A.MENU_ID = B.MENU_ID
				   AND A.MENULVL_VAL = 2
				   AND B.USER_ID = #{userId}
				   AND A.USE_YN = 'Y'
				 UNION ALL
				SELECT MENU_ID
					 , MENU_NM
					 , PARENTMENU_ID
					 , SOURCE_PATH
					 , SORT_SNO
					 , MENULVL_VAL
					 , SERVICE_GB
				  FROM NEO_SYSMENU
				 WHERE MENULVL_VAL = 1
				   AND MENU_ID IN (
									SELECT A.PARENTMENU_ID
									  FROM NEO_SYSMENU A, NEO_MENUDEPT_MAPP B
									 WHERE A.MENU_ID = B.MENU_ID
									   AND B.DEPT_NO = #{deptNo}
									   AND A.USE_YN = 'Y'
									)
				   AND USE_YN = 'Y'
				 UNION ALL
				SELECT A.MENU_ID
					 , A.MENU_NM
					 , A.PARENTMENU_ID
					 , A.SOURCE_PATH
					 , A.SORT_SNO
					 , A.MENULVL_VAL
					 , A.SERVICE_GB
				  FROM NEO_SYSMENU A, NEO_MENUDEPT_MAPP B
				 WHERE A.MENU_ID = B.MENU_ID
				   AND A.MENULVL_VAL = 2
				   AND B.DEPT_NO = #{deptNo}
				   AND A.USE_YN = 'Y'
				) TT1
			 GROUP BY MENU_ID
					, MENU_NM
					, PARENTMENU_ID
					, SOURCE_PATH
					, SORT_SNO
					, MENULVL_VAL
					, SERVICE_GB
			 ORDER BY PARENTMENU_ID, SORT_SNO
	</select>
	
	<select id="isOathUser" parameterType="string" resultType="string">
		SELECT IFNULL(OATH_YMD, 'N' ) OATH_YMD
		  FROM NEO_USER 
		 WHERE USER_ID = #{userId}
	</select>
	
	<update id="updateLoginDt" parameterType="userVO">
		UPDATE NEO_USER
		   SET LSTACCESS_DT = #{lstaccessDt}
			 , LSTACCESS_IP = #{lstaccessIp}
		 	 , PWERROR_CNT = 0
		 WHERE USER_ID	   = #{userId}
	</update>
	
	<update id="updatePwdErrorCnt" parameterType="string">
		UPDATE NEO_USER
		   SET PWERROR_CNT = IFNULL(PWERROR_CNT, 0) + 1
		 WHERE USER_ID    = #{userId}
	</update>
	
	<update id="updateCertilock" parameterType="string">
		UPDATE NEO_USER
		   SET LOCK_DT = DATE_FORMAT(NOW(), '%Y%m%d%H%i%s') 
			 , CERTILOCK_GB = 'Y'
		 WHERE USER_ID    = #{userId}
	</update>
	
	<select id="getPwdErrorInfo" parameterType="string" resultType="userVO">
		SELECT PW_INIT_YN
			 , CERTILOCK_GB
			 , PWERROR_CNT
			 , USER_ID
			 , PWINITLIMT_DT
		  FROM NEO_USER
		WHERE USER_ID    = #{userId}
	</select>
	
<!-- 	
	<insert id="insertLoginHist" parameterType="lgnHistVO">
		INSERT INTO NEO_LGN_HST
		(
			LGN_HST_ID
			, DEPT_NO
			, USER_ID
			, LGN_DT
			, LGN_IP
		)
		VALUES
		(
			NEO_LGN_HST_SEQ('NEXTVAL')
			, #{deptNo}
			, #{userId}
			, #{lgnDt}
			, #{lgnIp}
		)
	</insert>
 -->
</mapper>